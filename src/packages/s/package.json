{"classes": [{"name": "🔡","documentation":" The 🔡 class represents a string. [Read more in the language reference.](..\/..\/reference\/the-s-package.html#strings) ","methods": [{"name": "😀","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Puts this string to the standard output. ","arguments": []},{"name": "😛","returnType": {"package": "", "name": "👌", "optional": false},"documentation":" Returns 👍 if this string is equal to b. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"b"}]},{"name": "🔪","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" Returns the characters in a string beginning at the specified location through the specified number of characters\n        from: Location at which to begin extracting characters. If a negative number is given, it is treated as strLength + start where strLength = to the length of the string (for example, if start is -3 it is treated as strLength - 3.) ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"from"},{"type": {"package": "", "name": "🚂", "optional": false},"name":"length"}]},{"name": "🔍","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" Finds the first occurrences of a string in this string. Search is done from left to right. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"searchValue"}]},{"name": "🎼","returnType": {"package": "", "name": "👌", "optional": false},"documentation":" Whether this strings begins with another string. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"testString"}]},{"name": "⛳","returnType": {"package": "", "name": "👌", "optional": false},"documentation":" Whether this strings ends with another string. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"testString"}]},{"name": "🔧","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" The 🔧 method returns a new string, on which whitespace has been removed from both ends of a string. White spaces are defined by the language reference. ","arguments": []},{"name": "🔫","returnType": {"package": "s", "name": "🍨", "optional": false},"documentation":" This string is split up into substring at each place *seperator* is found. *seperator* itself is removed from the string. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"separator"}]},{"name": "💣","returnType": {"package": "s", "name": "🍨", "optional": false},"documentation":" This string is split up into substring at each place *seperator* is found. *seperator* itself is removed from the string. ","arguments": [{"type": {"package": "", "name": "🔣", "optional": false},"name":"separator"}]},{"name": "📏","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" This method returns the number of Unicode code points of this string. This is possibly not the number of bytes needed to write the string to a file, since Emojicode encodes everything into UTF8. ","arguments": []},{"name": "📐","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" Returns the number of bytes needed to encode this string into proper UTF8. ","arguments": []},{"name": "📝","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" Creates a new string by appending *symbol*. ","arguments": [{"type": {"package": "", "name": "🔣", "optional": false},"name":"symbol"}]},{"name": "🔬","returnType": {"package": "", "name": "🔣", "optional": true},"documentation":" Gets a symbol by its index. ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"index"}]},{"name": "📇","returnType": {"package": "s", "name": "📇", "optional": false},"documentation":" Converts the string to data encoded as UTF8. ","arguments": []},{"name": "🎶","returnType": {"package": "s", "name": "🍨", "optional": false},"documentation":" Returns an array with the symbols from this string. ","arguments": []},{"name": "🗞","returnType": {"package": "", "name": "⚪", "optional": false},"documentation":" Parses the JSON represented by this string. ","arguments": []}],"initializers": [{"name": "😯","documentation":" Prompts the user for input. (via the standard input\/output) ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"prompt"}]},{"name": "🎙","documentation":" Creates a string from the given list of symbols. ","arguments": [{"type": {"package": "s", "name": "🍨", "optional": false},"name":"symbolList"}]},{"name": "🔣","documentation":" Creates a string from the given symbol. ","arguments": [{"type": {"package": "", "name": "🔣", "optional": false},"name":"symbol"}]},{"name": "🍨","documentation":" Creates a string by joining all elements into a string sepearted by *separator*. ","arguments": [{"type": {"package": "s", "name": "🍨", "optional": false},"name":"list"},{"type": {"package": "s", "name": "🔡", "optional": false},"name":"separator"}]},{"name": "🚂","documentation":" Creates a string representation of the given integer. ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"integer"},{"type": {"package": "", "name": "🚂", "optional": false},"name":"base"}]}],"classMethods": [],"conformsTo": []},{"name": "🍨","documentation":" The 🍨 class represents an ordered mutable collection. [Read more in the language reference.](..\/..\/reference\/the-s-package.html#lists)  ","methods": [{"name": "🐮","returnType": {"package": "s", "name": "🍨", "optional": false},"documentation":" Returns a shallow copy of this list. ","arguments": []},{"name": "🐻","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Appends *item* to the end of the list in O(1). ","arguments": [{"type": {"package": "", "name": "0", "optional": false},"name":"item"}]},{"name": "🐽","returnType": {"package": "", "name": "0", "optional": true},"documentation":" Gets the item from *index* in O(1). If the index is invalid ✨ is returned. ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"index"}]},{"name": "🐨","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Removes the item at *index* and shifts all following items to the left in O(length - index). ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"index"}]},{"name": "🐵","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Shifts all items beginning from *index* to the right and inserts *item* at *index* in O(length - index). ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"index"},{"type": {"package": "", "name": "0", "optional": false},"name":"item"}]},{"name": "🐔","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" Returns the number of items in the list. ","arguments": []},{"name": "🐼","returnType": {"package": "", "name": "0", "optional": true},"documentation":" Removes the last item from the list and returns it in O(1). If the list is empty ✨ is returned. ","arguments": []},{"name": "🐹","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Shuffles the list in place using the Fisher Yates algorithm. The shuffle can be considered secure on any BSD or Linux system. ","arguments": []}],"initializers": [{"name": "🐸","documentation":" Creates an empty list. ","arguments": []}],"classMethods": [],"conformsTo": []},{"name": "🚨","documentation":" A 🚨 instance represents an error. Many methods interacting with the operating system will return an error on a failure. ","methods": [{"name": "😤","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" Returns the message associated with the error. This is maybe an empty string. ","arguments": []},{"name": "😴","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" Returns the code associated with the error. ","arguments": []}],"initializers": [{"name": "😮","documentation":" Create an error. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"message"},{"type": {"package": "", "name": "🚂", "optional": false},"name":"code"}]}],"classMethods": [],"conformsTo": []},{"name": "📇","documentation":" 📇 is an abstract interface to binary data. ","methods": [{"name": "😛","returnType": {"package": "", "name": "👌", "optional": false},"documentation":" Returns 👍 if this is equal to b. ","arguments": [{"type": {"package": "s", "name": "📇", "optional": false},"name":"b"}]},{"name": "📏","returnType": {"package": "", "name": "🚂", "optional": false},"documentation":" Returns the number of bytes represented by this instance. ","arguments": []},{"name": "📗","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" This method tries to convert the data to a string by treating it as UTF8. ","arguments": []}],"initializers": [],"classMethods": [],"conformsTo": []},{"name": "🍡","documentation":"\n  🍡 is an class whose subclasses can enumerate other objects. The 🍡 itself is never initiated.\n\n  To get the items from an iterator call the 🔽 method on it until it returns ✨, which indicates that there are no more items.\n\n  Enumerators conform [🍐](Enumerateable.html) and return themselves in the 🍡 method.\n","methods": [{"name": "🔽","returnType": {"package": "", "name": "⚪", "optional": false},"documentation":"\n    Returns the next object or ✨ if no more elements follow. You should not rely on the return of ✨ because ✨ could\n    be an ordinary item in the enumerated object. Use ❓ instead to determine whether more elements are coming.\n\n    The default implementation always returns ✨.\n\n    Subclasses of this class are encouraged to provide a more specific return type.\n  ","arguments": []},{"name": "❓","returnType": {"package": "", "name": "👌", "optional": false},"documentation":"\n    Whether another element follows.\n  ","arguments": []},{"name": "🍡","returnType": {"package": "s", "name": "🍡", "optional": false},"arguments": []}],"initializers": [],"classMethods": [],"conformsTo": [{"package": "s", "name": "🍐", "optional": false}]},{"name": "🍯","documentation":"\n  \n","methods": [{"name": "🐽","returnType": {"package": "", "name": "0", "optional": true},"documentation":" Returns the value assigned to *key*. If key is not in the dictionary ✨ is returned. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"key"}]},{"name": "🐨","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Removes *key* and its assigned value from the 🍯. No action is performed if *key* is not in the 🍯. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"key"}]},{"name": "🐷","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Adds a key-value pair. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"key"},{"type": {"package": "", "name": "0", "optional": false},"name":"object"}]}],"initializers": [{"name": "🐸","documentation":" Creates an empty dictionary. ","arguments": []}],"classMethods": [],"conformsTo": []},{"name": "💻","documentation":" 💻 provides several class methods that can be used to interact with the operating system. It cannot be instantiated. ","methods": [],"initializers": [],"classMethods": [{"name": "🌳","returnType": {"package": "s", "name": "🔡", "optional": true},"documentation":" Gets an environment variable by its name. If the variable cannot be found ✨ is returned. ","arguments": [{"type": {"package": "s", "name": "🔡", "optional": false},"name":"variableName"}]},{"name": "🚪","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Immediately exits the program with the given status code. The code may not be larger than 255 on most operating systems. ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"status"}]},{"name": "🌍","returnType": {"package": "s", "name": "🔡", "optional": false},"documentation":" Returns the current working directory. ","arguments": []},{"name": "🕰","returnType": {"package": "", "name": "✨", "optional": false},"documentation":" Suspends the calling thread from execution for at least the number of seconds specified by the arguments *seconds*. ","arguments": [{"type": {"package": "", "name": "🚂", "optional": false},"name":"seconds"}]}],"conformsTo": []}],"enums": [],"protocols": [{"name": "🍐","documentation":"\n    A class whose instances shall be enumerateable using the 🍐 language construct must implement this protocol.\n\n    The class must return an instance of a subclass of [🍡](Enumerator.html) which will be used by the 🍐 language\n    construct to enumerate the object.\n","methods": [{"name": "🍡","returnType": {"package": "s", "name": "🍡", "optional": false},"documentation":" This method must return an enumerator which can be used to enumerate the instance. ","arguments": []}]}]}